Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-1000-2016.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 73
|V| = 180
|A| = 498
|V′| = 137
|A′| = 18632
###################SBRP####################
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
Getting intersection cuts
Isolated clique: [109]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [111]
Clique: 4
Isolated clique: [42]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [66]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [11]
Clique: 4
Isolated clique: [72]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [26]
Clique: 4
Isolated clique: [97]
Clique: 4
Isolated clique: [7]
Clique: 4
Isolated clique: [9]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [54]
Clique: 4
Isolated clique: [37]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [91]
Clique: 4
Isolated clique: [107]
Clique: 3
Isolated clique: [127]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: [45]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [90]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [53]
Clique: 3
Isolated clique: [55]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [86]
Clique: 3
Isolated clique: [87]
Clique: 3
Isolated clique: [48]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [36]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [10]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [82]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: [143]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [5]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [15]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [141]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [150]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [80]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [152]
Clique: 3
Isolated clique: [148]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: [117]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [88]
Clique: 3
Isolated clique: [85]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [121]
Clique: 3
Isolated clique: [149]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [94]
Clique: 2
Isolated clique: [93]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [78]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: [104]
Clique: 2
Isolated clique: [56]
Clique: 2
Isolated clique: [47]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [142]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [112]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [38]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [153]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [79]
Clique: 2
Isolated clique: [165]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [3]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [60]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: [171]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [67]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [155, 156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [19]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [113]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [131]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [101]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [151]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [140]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 951 rows and 246 columns.
Reduced LP has 28060 rows, 18596 columns, and 243160 nonzeros.
Presolve time = 0.15 sec. (73.83 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           180.000000
Perturbation started.
Iteration:   101   Dual objective     =           180.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 617 rows and 244 columns.
MIP Presolve modified 136 coefficients.
Reduced MIP has 27963 rows, 18598 columns, and 209783 nonzeros.
Reduced MIP has 10 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.07 sec. (61.79 ticks)
Probing time = 0.01 sec. (3.20 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27963 rows, 18598 columns, and 209783 nonzeros.
Reduced MIP has 10 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.13 sec. (79.96 ticks)
Probing time = 0.01 sec. (3.18 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.14 sec. (59.74 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      180.0000      180.0000      327    0.00%
Elapsed time = 0.52 sec. (313.19 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.53 sec. (314.61 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.53 sec. (314.61 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 617 rows and 244 columns.
MIP Presolve modified 26865 coefficients.
Reduced MIP has 27963 rows, 18598 columns, and 194766 nonzeros.
Reduced MIP has 18462 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.42 sec. (360.09 ticks)
Found incumbent of value 0.000000 after 0.70 sec. (547.10 ticks)
Probing time = 0.11 sec. (12.74 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27963 rows, 18598 columns, and 194766 nonzeros.
Reduced MIP has 18462 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.17 sec. (117.57 ticks)
Probing time = 0.09 sec. (12.01 ticks)
Clique table members: 9228.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.10 sec. (72.95 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      180.0000              --- 
      0     0      180.0000   108        0.0000      180.0000      292     --- 
*     0+    0                          180.0000      180.0000             0.00%
      0     0        cutoff            180.0000      180.0000      474    0.00%
Elapsed time = 1.80 sec. (1384.70 ticks, tree = 0.01 MB, solutions = 2)

Cover cuts applied:  1
Implied bound cuts applied:  3
Mixed integer rounding cuts applied:  3
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    1.80 sec. (1386.07 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    1.80 sec. (1386.07 ticks)
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-1000-2016 & 137 & 18632 & 73 & 120.0 & IP & 180.0 & 180.0 & 0.530572166 & 1 & 429 & 40.53790815 & - & - & - & 0 & 180.0 & 1.805039882659912 & 0.0 & 0 & 27656.96000000001 & 61.61853000000002 & 4474.02
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-1000-2017.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 73
|V| = 180
|A| = 498
|V′| = 137
|A′| = 18632
###################SBRP####################
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
Getting intersection cuts
Isolated clique: [109]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [111]
Clique: 4
Isolated clique: [42]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [66]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [11]
Clique: 4
Isolated clique: [72]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [26]
Clique: 4
Isolated clique: [97]
Clique: 4
Isolated clique: [7]
Clique: 4
Isolated clique: [9]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [54]
Clique: 4
Isolated clique: [37]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [91]
Clique: 4
Isolated clique: [107]
Clique: 3
Isolated clique: [127]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: [45]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [90]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [53]
Clique: 3
Isolated clique: [55]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [86]
Clique: 3
Isolated clique: [87]
Clique: 3
Isolated clique: [48]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [36]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [10]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [82]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: [143]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [5]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [15]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [141]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [150]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [80]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [152]
Clique: 3
Isolated clique: [148]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: [117]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [88]
Clique: 3
Isolated clique: [85]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [121]
Clique: 3
Isolated clique: [149]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [94]
Clique: 2
Isolated clique: [93]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [78]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: [104]
Clique: 2
Isolated clique: [56]
Clique: 2
Isolated clique: [47]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [142]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [112]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [38]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [153]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [79]
Clique: 2
Isolated clique: [165]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [3]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [60]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: [171]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [67]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [155, 156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [19]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [113]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [131]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [101]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [151]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [140]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 934 rows and 229 columns.
Reduced LP has 28077 rows, 18613 columns, and 255644 nonzeros.
Presolve time = 0.15 sec. (75.32 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           939.000000
Perturbation started.
Iteration:   101   Dual objective     =           939.000000
Iteration:   378   Dual objective     =           939.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 600 rows and 227 columns.
MIP Presolve modified 136 coefficients.
Reduced MIP has 27980 rows, 18615 columns, and 222267 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.08 sec. (64.91 ticks)
Probing time = 0.02 sec. (4.72 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27980 rows, 18615 columns, and 222267 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.13 sec. (83.75 ticks)
Probing time = 0.01 sec. (5.36 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.15 sec. (64.29 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      939.0000      939.0000      363    0.00%
Elapsed time = 0.54 sec. (333.71 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.55 sec. (335.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.55 sec. (335.17 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 600 rows and 227 columns.
MIP Presolve modified 29142 coefficients.
Reduced MIP has 27980 rows, 18615 columns, and 206364 nonzeros.
Reduced MIP has 18479 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.45 sec. (382.99 ticks)
Found incumbent of value 0.000000 after 0.69 sec. (568.54 ticks)
Probing time = 0.09 sec. (12.70 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27980 rows, 18615 columns, and 206364 nonzeros.
Reduced MIP has 18479 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.17 sec. (122.07 ticks)
Probing time = 0.06 sec. (12.14 ticks)
Clique table members: 9228.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.13 sec. (78.49 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      939.0000              --- 
*     0+    0                           96.0000      939.0000           878.12%
      0     0      939.0000   124       96.0000      939.0000      310  878.12%
*     0+    0                          939.0000      939.0000             0.00%
      0     0        cutoff            939.0000      939.0000      314    0.00%
Elapsed time = 1.70 sec. (1309.37 ticks, tree = 0.01 MB, solutions = 3)
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-1000-2017 & 137 & 18632 & 73 & 120.0 & IP & 939.0 & 939.0 & 0.549696342 & 1 & 429 & 39.975213816 & - & - & - & 0 & 939.0 & 1.7064430713653564 & 0.0 & 0 & 38274.70999999998 & 107.83258499999997 & 11204.56
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-1000-2018.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility

Cover cuts applied:  1
Flow cuts applied:  1
Mixed integer rounding cuts applied:  1

Root node processing (before b&c):
  Real time             =    1.70 sec. (1310.91 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    1.70 sec. (1310.91 ticks)
Checking complete graph
|B| = 73
|V| = 180
|A| = 498
|V′| = 137
|A′| = 18632
###################SBRP####################
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
Getting intersection cuts
Isolated clique: [109]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [111]
Clique: 4
Isolated clique: [42]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [66]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [11]
Clique: 4
Isolated clique: [72]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [26]
Clique: 4
Isolated clique: [97]
Clique: 4
Isolated clique: [7]
Clique: 4
Isolated clique: [9]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [54]
Clique: 4
Isolated clique: [37]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [91]
Clique: 4
Isolated clique: [107]
Clique: 3
Isolated clique: [127]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: [45]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [90]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [53]
Clique: 3
Isolated clique: [55]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [86]
Clique: 3
Isolated clique: [87]
Clique: 3
Isolated clique: [48]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [36]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [10]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [82]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: [143]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [5]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [15]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [141]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [150]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [80]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [152]
Clique: 3
Isolated clique: [148]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: [117]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [88]
Clique: 3
Isolated clique: [85]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [121]
Clique: 3
Isolated clique: [149]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [94]
Clique: 2
Isolated clique: [93]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [78]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: [104]
Clique: 2
Isolated clique: [56]
Clique: 2
Isolated clique: [47]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [142]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [112]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [38]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [153]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [79]
Clique: 2
Isolated clique: [165]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [3]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [60]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: [171]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [67]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [155, 156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [19]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [113]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [131]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [101]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [151]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [140]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 934 rows and 229 columns.
Reduced LP has 28077 rows, 18613 columns, and 255644 nonzeros.
Presolve time = 0.16 sec. (75.32 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           947.000000
Perturbation started.
Iteration:   101   Dual objective     =           947.000000
Iteration:   378   Dual objective     =           947.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 600 rows and 227 columns.
MIP Presolve modified 136 coefficients.
Reduced MIP has 27980 rows, 18615 columns, and 222267 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.08 sec. (64.91 ticks)
Probing time = 0.01 sec. (4.72 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27980 rows, 18615 columns, and 222267 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.13 sec. (83.75 ticks)
Probing time = 0.01 sec. (5.36 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.13 sec. (64.29 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      947.0000      947.0000      363    0.00%
Elapsed time = 0.52 sec. (333.71 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.53 sec. (335.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.53 sec. (335.17 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 600 rows and 227 columns.
MIP Presolve modified 29142 coefficients.
Reduced MIP has 27980 rows, 18615 columns, and 206364 nonzeros.
Reduced MIP has 18479 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.45 sec. (382.99 ticks)
Found incumbent of value 0.000000 after 0.69 sec. (568.54 ticks)
Probing time = 0.09 sec. (12.70 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27980 rows, 18615 columns, and 206364 nonzeros.
Reduced MIP has 18479 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.17 sec. (122.07 ticks)
Probing time = 0.06 sec. (12.14 ticks)
Clique table members: 9228.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.11 sec. (78.49 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      947.0000              --- 
*     0+    0                           96.0000      947.0000           886.46%
      0     0      947.0000   124       96.0000      947.0000      310  886.46%
*     0+    0                          947.0000      947.0000             0.00%
      0     0        cutoff            947.0000      947.0000      314    0.00%
Elapsed time = 1.67 sec. (1309.37 ticks, tree = 0.01 MB, solutions = 3)
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-1000-2018 & 137 & 18632 & 73 & 120.0 & IP & 947.0 & 947.0 & 0.529346821 & 1 & 429 & 40.129215732 & - & - & - & 0 & 947.0 & 1.6765210628509521 & 0.0 & 0 & 38274.70999999998 & 107.83258499999997 & 11204.56
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-1000-2019.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 73
|V| = 180
|A| = 498
|V′| = 137
|A′| = 18632
###################SBRP####################
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
Getting intersection cuts
Isolated clique: [109]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [111]
Clique: 4
Isolated clique: [42]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [66]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [11]
Clique: 4
Isolated clique: [72]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [26]
Clique: 4
Isolated clique: [97]
Clique: 4
Isolated clique: [7]
Clique: 4
Isolated clique: [9]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [54]
Clique: 4
Isolated clique: [37]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [91]
Clique: 4
Isolated clique: [107]
Clique: 3
Isolated clique: [127]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: [45]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [90]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [53]
Clique: 3
Isolated clique: [55]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [86]
Clique: 3
Isolated clique: [87]
Clique: 3
Isolated clique: [48]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [36]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [10]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [82]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: [143]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [5]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [15]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [141]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [150]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [80]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [152]
Clique: 3
Isolated clique: [148]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: [117]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [88]
Clique: 3
Isolated clique: [85]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [121]
Clique: 3
Isolated clique: [149]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [94]
Clique: 2
Isolated clique: [93]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [78]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: [104]
Clique: 2
Isolated clique: [56]
Clique: 2
Isolated clique: [47]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [142]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [112]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [38]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [153]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [79]
Clique: 2
Isolated clique: [165]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [3]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [60]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: [171]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [67]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [155, 156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [19]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [113]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [131]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [101]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [151]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [140]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation

Cover cuts applied:  1
Flow cuts applied:  1
Mixed integer rounding cuts applied:  1

Root node processing (before b&c):
  Real time             =    1.67 sec. (1310.91 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    1.67 sec. (1310.91 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 934 rows and 229 columns.
Reduced LP has 28077 rows, 18613 columns, and 255644 nonzeros.
Presolve time = 0.15 sec. (75.32 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           947.000000
Perturbation started.
Iteration:   101   Dual objective     =           947.000000
Iteration:   378   Dual objective     =           947.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 600 rows and 227 columns.
MIP Presolve modified 136 coefficients.
Reduced MIP has 27980 rows, 18615 columns, and 222267 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.08 sec. (64.91 ticks)
Probing time = 0.01 sec. (4.72 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27980 rows, 18615 columns, and 222267 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.13 sec. (83.75 ticks)
Probing time = 0.01 sec. (5.36 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.13 sec. (64.29 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      947.0000      947.0000      363    0.00%
Elapsed time = 0.52 sec. (333.71 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.52 sec. (335.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.52 sec. (335.17 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 600 rows and 227 columns.
MIP Presolve modified 29142 coefficients.
Reduced MIP has 27980 rows, 18615 columns, and 206364 nonzeros.
Reduced MIP has 18479 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.45 sec. (382.99 ticks)
Found incumbent of value 0.000000 after 0.69 sec. (568.54 ticks)
Probing time = 0.09 sec. (12.70 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27980 rows, 18615 columns, and 206364 nonzeros.
Reduced MIP has 18479 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.17 sec. (122.07 ticks)
Probing time = 0.06 sec. (12.14 ticks)
Clique table members: 9228.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.11 sec. (78.49 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      947.0000              --- 
*     0+    0                           96.0000      947.0000           886.46%
      0     0      947.0000   124       96.0000      947.0000      310  886.46%
*     0+    0                          947.0000      947.0000             0.00%
      0     0        cutoff            947.0000      947.0000      314    0.00%
Elapsed time = 1.68 sec. (1309.37 ticks, tree = 0.01 MB, solutions = 3)
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-1000-2019 & 137 & 18632 & 73 & 120.0 & IP & 947.0 & 947.0 & 0.52716754 & 1 & 429 & 40.055710239 & - & - & - & 0 & 947.0 & 1.681169033050537 & 0.0 & 0 & 38274.70999999998 & 107.83258499999997 & 11204.56
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-1000-2020.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 73
|V| = 180
|A| = 498
|V′| = 137
|A′| = 18632
###################SBRP####################
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
Getting intersection cuts
Isolated clique: [109]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [111]
Clique: 4
Isolated clique: [42]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [66]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [11]
Clique: 4
Isolated clique: [72]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [26]
Clique: 4
Isolated clique: [97]
Clique: 4
Isolated clique: [7]
Clique: 4
Isolated clique: [9]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [54]
Clique: 4
Isolated clique: [37]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [91]
Clique: 4
Isolated clique: [107]
Clique: 3
Isolated clique: [127]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: [45]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [90]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [53]
Clique: 3
Isolated clique: [55]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [86]
Clique: 3
Isolated clique: [87]
Clique: 3
Isolated clique: [48]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [36]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [10]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [82]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: [143]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [5]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [15]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [141]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [150]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [80]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [152]
Clique: 3
Isolated clique: [148]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: [117]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [88]
Clique: 3
Isolated clique: [85]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [121]
Clique: 3
Isolated clique: [149]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [94]
Clique: 2
Isolated clique: [93]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [78]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: [104]
Clique: 2
Isolated clique: [56]
Clique: 2
Isolated clique: [47]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [142]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [112]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [38]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [153]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [79]
Clique: 2
Isolated clique: [165]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [3]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [60]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: [171]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [67]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [155, 156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [19]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [113]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [131]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [101]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [151]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [140]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation

Cover cuts applied:  1
Flow cuts applied:  1
Mixed integer rounding cuts applied:  1

Root node processing (before b&c):
  Real time             =    1.68 sec. (1310.91 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    1.68 sec. (1310.91 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 934 rows and 229 columns.
Reduced LP has 28077 rows, 18613 columns, and 255644 nonzeros.
Presolve time = 0.15 sec. (75.32 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           982.000000
Perturbation started.
Iteration:   101   Dual objective     =           982.000000
Iteration:   378   Dual objective     =           982.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 600 rows and 227 columns.
MIP Presolve modified 136 coefficients.
Reduced MIP has 27980 rows, 18615 columns, and 222267 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.08 sec. (64.91 ticks)
Probing time = 0.01 sec. (4.72 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27980 rows, 18615 columns, and 222267 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.13 sec. (83.75 ticks)
Probing time = 0.01 sec. (5.36 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.15 sec. (64.29 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      982.0000      982.0000      363    0.00%
Elapsed time = 0.54 sec. (333.71 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.54 sec. (335.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.54 sec. (335.17 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 600 rows and 227 columns.
MIP Presolve modified 29142 coefficients.
Reduced MIP has 27980 rows, 18615 columns, and 206364 nonzeros.
Reduced MIP has 18479 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.46 sec. (382.99 ticks)
Found incumbent of value 0.000000 after 0.69 sec. (568.54 ticks)
Probing time = 0.10 sec. (12.70 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27980 rows, 18615 columns, and 206364 nonzeros.
Reduced MIP has 18479 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.17 sec. (122.07 ticks)
Probing time = 0.06 sec. (12.14 ticks)
Clique table members: 9228.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.12 sec. (78.49 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      982.0000              --- 
*     0+    0                          100.0000      982.0000           882.00%
      0     0      982.0000   124      100.0000      982.0000      310  882.00%
*     0+    0                          982.0000      982.0000             0.00%
      0     0        cutoff            982.0000      982.0000      314    0.00%
Elapsed time = 1.71 sec. (1309.37 ticks, tree = 0.01 MB, solutions = 3)
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-1000-2020 & 137 & 18632 & 73 & 120.0 & IP & 982.0 & 982.0 & 0.547966894 & 1 & 429 & 40.074494776 & - & - & - & 0 & 982.0 & 1.711723804473877 & 0.0 & 0 & 38274.70999999998 & 107.83258499999997 & 11204.56
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-1000-2021.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility

Cover cuts applied:  1
Flow cuts applied:  1
Mixed integer rounding cuts applied:  1

Root node processing (before b&c):
  Real time             =    1.71 sec. (1310.91 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    1.71 sec. (1310.91 ticks)
Checking complete graph
|B| = 73
|V| = 180
|A| = 498
|V′| = 137
|A′| = 18632
###################SBRP####################
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
Getting intersection cuts
Isolated clique: [109]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [111]
Clique: 4
Isolated clique: [42]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [66]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [11]
Clique: 4
Isolated clique: [72]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [26]
Clique: 4
Isolated clique: [97]
Clique: 4
Isolated clique: [7]
Clique: 4
Isolated clique: [9]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [54]
Clique: 4
Isolated clique: [37]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [91]
Clique: 4
Isolated clique: [107]
Clique: 3
Isolated clique: [127]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: [45]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [90]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [53]
Clique: 3
Isolated clique: [55]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [86]
Clique: 3
Isolated clique: [87]
Clique: 3
Isolated clique: [48]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [36]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [10]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [82]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: [143]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [5]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [15]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [141]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [150]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [80]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [152]
Clique: 3
Isolated clique: [148]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: [117]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [88]
Clique: 3
Isolated clique: [85]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [121]
Clique: 3
Isolated clique: [149]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [94]
Clique: 2
Isolated clique: [93]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [78]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: [104]
Clique: 2
Isolated clique: [56]
Clique: 2
Isolated clique: [47]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [142]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [112]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [38]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [153]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [79]
Clique: 2
Isolated clique: [165]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [3]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [60]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: [171]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [67]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [155, 156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [19]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [113]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [131]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [101]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [151]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [140]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 934 rows and 229 columns.
Reduced LP has 28077 rows, 18613 columns, and 255644 nonzeros.
Presolve time = 0.16 sec. (75.32 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =          1056.000000
Perturbation started.
Iteration:   101   Dual objective     =          1056.000000
Iteration:   378   Dual objective     =          1056.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 600 rows and 227 columns.
MIP Presolve modified 136 coefficients.
Reduced MIP has 27980 rows, 18615 columns, and 222267 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.08 sec. (64.91 ticks)
Probing time = 0.02 sec. (4.72 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27980 rows, 18615 columns, and 222267 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.14 sec. (83.75 ticks)
Probing time = 0.01 sec. (5.36 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.14 sec. (64.29 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0     1056.0000     1056.0000      363    0.00%
Elapsed time = 0.54 sec. (333.71 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.54 sec. (335.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.54 sec. (335.17 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 600 rows and 227 columns.
MIP Presolve modified 29142 coefficients.
Reduced MIP has 27980 rows, 18615 columns, and 206364 nonzeros.
Reduced MIP has 18479 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.45 sec. (382.99 ticks)
Found incumbent of value 0.000000 after 0.69 sec. (568.54 ticks)
Probing time = 0.09 sec. (12.70 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 27980 rows, 18615 columns, and 206364 nonzeros.
Reduced MIP has 18479 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.17 sec. (122.07 ticks)
Probing time = 0.06 sec. (12.14 ticks)
Clique table members: 9228.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.11 sec. (78.49 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000     1056.0000              --- 
*     0+    0                          104.0000     1056.0000           915.38%
      0     0     1056.0000   124      104.0000     1056.0000      310  915.38%
*     0+    0                         1056.0000     1056.0000             0.00%
      0     0        cutoff           1056.0000     1056.0000      314    0.00%
Elapsed time = 1.64 sec. (1309.38 ticks, tree = 0.01 MB, solutions = 3)
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
[93, 94, 127]
1.4124599999999998
[106, 143, 107, 109, 108]
1.2136200000000001
[82, 151, 107, 143, 140]
1.46682
[85, 89, 88, 87]
0.8229000000000001
[41, 48, 66, 45, 95, 96]
2.86038
[44, 46, 52, 51]
2.70204
[53, 55, 54, 86]
1.1368800000000001
[107, 110, 109]
1.91976
[36, 96, 95, 127, 94, 162, 165]
1.7161800000000003
[6, 99, 67, 68, 7]
1.64934
[79, 97, 121, 149, 150, 122]
1.7013600000000002
[6, 7, 76, 28]
2.91282
[72, 73, 129]
1.1727
[53, 91, 113, 133, 136, 55]
2.59404
[81, 101, 106, 108, 105]
1.32378
[54, 55, 136, 57, 60, 59]
1.95612
[2, 66, 90, 118, 117, 32]
3.4404
[80, 105, 108, 109, 111]
1.15374
[4, 5, 31, 34]
3.06162
[39, 78, 97, 40]
1.9300800000000002
[17, 54, 59, 58]
1.4064
[1, 142, 37, 36, 165]
1.74582
[3, 4, 34, 72, 129]
3.0867600000000004
[3, 129, 73, 74]
2.79912
[53, 86, 87, 88, 118, 90, 91]
2.1550200000000004
[78, 81, 105, 80, 148, 121, 97]
1.65792
[88, 89, 117, 118]
0.7599
[112, 123, 122, 152]
2.43762
[83, 116, 158]
1.1769
[38, 44, 43, 98]
2.21262
[9, 32, 117, 89, 85, 17, 11, 10]
2.51274
[11, 17, 58, 130, 61, 69, 131]
2.51496
[5, 99, 6, 28, 27, 31]
3.01806
[48, 141, 91, 90, 66]
2.7873
[82, 153, 157, 151]
0.62382
[37, 142, 98]
1.7028
[39, 40, 47, 46]
2.17734
[14, 15, 19, 18]
1.7103000000000002
[38, 39, 46, 44]
2.21412
[167, 168, 169]
2.7471
[2, 32, 9, 76, 7]
2.94654
[10, 11, 16, 26]
2.2160400000000005
[15, 70, 20, 19]
2.0818200000000004
[15, 23, 25, 70]
2.0217
[2, 45, 66]
1.10574
[43, 44, 51, 120, 50]
2.67918
[5, 77, 128, 67, 99]
1.09206
[49, 113, 91, 141]
2.8333800000000005
[154, 155, 156]
0.6326999999999999
[46, 47, 104, 139, 56, 52]
6.0558
[42, 43, 50, 49]
2.74872
[17, 85, 87, 86, 54]
1.11774
[109, 110, 112, 152, 111]
1.8010200000000003
[2, 7, 68, 92, 93, 127, 95, 45]
3.7830000000000004
[16, 70, 25, 26]
1.9483200000000003
[111, 152, 122, 150]
0.6112200000000001
[22, 72, 34, 31, 27, 26, 25, 23]
3.1161600000000003
[37, 98, 43, 42]
2.24178
[121, 148, 149]
0.63678
[11, 131, 21, 16]
1.5053999999999998
[101, 140, 143, 106]
0.7911
[22, 73, 72]
0.73416
[80, 111, 150, 149, 148]
0.9496800000000001
[16, 21, 20, 70]
1.53252
[36, 37, 42, 41, 96]
2.27106
[9, 10, 26, 27]
2.06748
[40, 97, 79]
1.9868999999999999
[56, 139, 171, 173, 62]
3.20256
[58, 59, 60, 130]
2.1051
[104, 170, 171, 139]
3.9794400000000003
[41, 42, 49, 141, 48]
2.79348
[9, 27, 28, 76]
1.9233600000000002
[82, 163, 164, 156, 155, 153]
1.44906
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-1000-2021 & 137 & 18632 & 73 & 120.0 & IP & 1056.0 & 1056.0 & 0.549047902 & 1 & 429 & 39.961977137 & - & - & - & 0 & 1056.0 & 1.6457409858703613 & 0.0 & 0 & 35087.19999999999 & 103.05132 & 11204.56
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-2000-2016.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 88
|V| = 254
|A| = 677
|V′| = 177
|A′| = 31152
###################SBRP####################
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
Getting intersection cuts
Isolated clique: [12]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [55]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [104]
Clique: 4
Isolated clique: [83]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [85]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [126]
Clique: 4
Isolated clique: [128]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [8]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [28]
Clique: 4
Isolated clique: [38]
Clique: 4
Isolated clique: [79]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [113]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [60]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [11]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [24]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [159]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: [23]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [230]
Clique: 3
Isolated clique: [235]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [234]
Clique: 3
Isolated clique: [232]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [114]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [93]
Clique: 3
Isolated clique: [231]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [171]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [109]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [7]
Clique: 3
Isolated clique: [29]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [71]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [189]
Clique: 3
Isolated clique: [140]
Clique: 3
Isolated clique: [187]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [50]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [54]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [100]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: [157]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [123]
Clique: 3
Isolated clique: [173]
Clique: 3
Isolated clique: [125]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [124]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [33]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [136]
Clique: 3
Isolated clique: [135]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: [115]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [46]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [186]
Clique: 3
Isolated clique: [185]
Clique: 3
Isolated clique: [75, 182]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [160]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [161]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [80]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [117]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [106]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [39]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [170]
Clique: 2
Isolated clique: [118]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [127]
Clique: 2
Isolated clique: [129]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [61]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [166]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [172]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [69]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [66]
Clique: 2
Isolated clique: [107]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [188]
Clique: 2
Isolated clique: [15, 19]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [87]
Clique: 2
Isolated clique: [223]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: [211]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [48]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: [57]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [5]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [92]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [91]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [220]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [221]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [193, 194]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [233]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [203]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation

Cover cuts applied:  1
Flow cuts applied:  1
Mixed integer rounding cuts applied:  1

Root node processing (before b&c):
  Real time             =    1.64 sec. (1310.91 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    1.64 sec. (1310.91 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 1399 rows and 463 columns.
Reduced LP has 46657 rows, 30954 columns, and 414165 nonzeros.
Presolve time = 0.30 sec. (124.52 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           126.000000
Perturbation started.
Iteration:   101   Dual objective     =           126.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 998 rows and 457 columns.
MIP Presolve modified 176 coefficients.
Reduced MIP has 46527 rows, 30960 columns, and 344527 nonzeros.
Reduced MIP has 8 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.14 sec. (101.60 ticks)
Probing time = 0.01 sec. (4.14 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46527 rows, 30960 columns, and 344527 nonzeros.
Reduced MIP has 8 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.24 sec. (131.64 ticks)
Probing time = 0.02 sec. (5.26 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.23 sec. (82.16 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      126.0000      126.0000      284    0.00%
Elapsed time = 0.90 sec. (498.71 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.90 sec. (501.07 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.90 sec. (501.07 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 998 rows and 457 columns.
MIP Presolve modified 30076 coefficients.
Reduced MIP has 46527 rows, 30960 columns, and 325915 nonzeros.
Reduced MIP has 30784 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.73 sec. (572.86 ticks)
Found incumbent of value 0.000000 after 1.20 sec. (878.30 ticks)
Probing time = 0.16 sec. (18.52 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46527 rows, 30960 columns, and 325915 nonzeros.
Reduced MIP has 30784 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.31 sec. (205.67 ticks)
Probing time = 0.12 sec. (17.54 ticks)
Clique table members: 15390.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.20 sec. (129.04 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      126.0000              --- 
      0     0      126.0000   126        0.0000      126.0000      373     --- 
*     0+    0                          126.0000      126.0000             0.00%
      0     0        cutoff            126.0000      126.0000      578    0.00%
Elapsed time = 4.27 sec. (3664.85 ticks, tree = 0.01 MB, solutions = 2)
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-2000-2016 & 177 & 31152 & 88 & 120.0 & IP & 126.0 & 126.0 & 0.907375783 & 3 & 525 & 66.822405249 & - & - & - & 0 & 126.0 & 4.271297931671143 & 0.0 & 0 & 31023.38 & 61.35510000000001 & 3293.34
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-2000-2017.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 88
|V| = 254
|A| = 677
|V′| = 177
|A′| = 31152
###################SBRP####################
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
Getting intersection cuts
Isolated clique: [12]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [55]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [104]
Clique: 4
Isolated clique: [83]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [85]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [126]
Clique: 4
Isolated clique: [128]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [8]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [28]
Clique: 4
Isolated clique: [38]
Clique: 4
Isolated clique: [79]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [113]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [60]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [11]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [24]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [159]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: [23]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [230]
Clique: 3
Isolated clique: [235]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [234]
Clique: 3
Isolated clique: [232]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [114]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [93]
Clique: 3
Isolated clique: [231]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [171]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [109]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [7]
Clique: 3
Isolated clique: [29]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [71]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [189]
Clique: 3
Isolated clique: [140]
Clique: 3
Isolated clique: [187]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [50]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [54]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [100]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: [157]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [123]
Clique: 3
Isolated clique: [173]
Clique: 3
Isolated clique: [125]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [124]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [33]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [136]
Clique: 3
Isolated clique: [135]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: [115]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [46]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [186]
Clique: 3
Isolated clique: [185]
Clique: 3
Isolated clique: [75, 182]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [160]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [161]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [80]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [117]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [106]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [39]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [170]
Clique: 2
Isolated clique: [118]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [127]
Clique: 2
Isolated clique: [129]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [61]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [166]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [172]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [69]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [66]
Clique: 2
Isolated clique: [107]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [188]
Clique: 2
Isolated clique: [15, 19]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [87]
Clique: 2
Isolated clique: [223]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: [211]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [48]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: [57]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [5]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [92]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [91]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [220]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [221]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [193, 194]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [233]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [203]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation

Implied bound cuts applied:  13
Flow cuts applied:  4
Mixed integer rounding cuts applied:  4
Gomory fractional cuts applied:  6

Root node processing (before b&c):
  Real time             =    4.27 sec. (3667.16 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    4.27 sec. (3667.16 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 1381 rows and 445 columns.
Reduced LP has 46675 rows, 30972 columns, and 431587 nonzeros.
Presolve time = 0.29 sec. (126.65 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           832.000000
Perturbation started.
Iteration:   101   Dual objective     =           832.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 980 rows and 439 columns.
MIP Presolve modified 176 coefficients.
Reduced MIP has 46545 rows, 30978 columns, and 361949 nonzeros.
Reduced MIP has 26 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.15 sec. (105.95 ticks)
Probing time = 0.02 sec. (7.76 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46545 rows, 30978 columns, and 361949 nonzeros.
Reduced MIP has 26 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.25 sec. (136.83 ticks)
Probing time = 0.03 sec. (8.84 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.28 sec. (116.45 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      832.0000      832.0000      410    0.00%
Elapsed time = 0.99 sec. (558.15 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.99 sec. (560.55 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.99 sec. (560.55 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 980 rows and 439 columns.
MIP Presolve modified 32344 coefficients.
Reduced MIP has 46545 rows, 30978 columns, and 342282 nonzeros.
Reduced MIP has 30802 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.75 sec. (602.95 ticks)
Found incumbent of value 0.000000 after 1.22 sec. (920.34 ticks)
Probing time = 0.14 sec. (18.61 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46545 rows, 30978 columns, and 342282 nonzeros.
Reduced MIP has 30802 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.33 sec. (212.00 ticks)
Probing time = 0.09 sec. (17.81 ticks)
Clique table members: 15390.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.20 sec. (150.88 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      832.0000              --- 
      0     0      832.0000   124        0.0000      832.0000      345     --- 
*     0+    0                          832.0000      832.0000             0.00%
      0     0        cutoff            832.0000      832.0000     1157    0.00%
Elapsed time = 4.98 sec. (4690.51 ticks, tree = 0.01 MB, solutions = 2)
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-2000-2017 & 177 & 31152 & 88 & 120.0 & IP & 832.0 & 832.0 & 1.002878627 & 3 & 525 & 66.970039843 & - & - & - & 0 & 832.0 & 4.98246693611145 & 0.0 & 0 & 34890.78000000002 & 101.04120000000003 & 10823.340000000002
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-2000-2018.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph

Implied bound cuts applied:  2
Flow cuts applied:  3
Mixed integer rounding cuts applied:  4
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    4.98 sec. (4692.85 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    4.98 sec. (4692.85 ticks)
|B| = 88
|V| = 254
|A| = 677
|V′| = 177
|A′| = 31152
###################SBRP####################
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
Getting intersection cuts
Isolated clique: [12]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [55]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [104]
Clique: 4
Isolated clique: [83]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [85]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [126]
Clique: 4
Isolated clique: [128]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [8]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [28]
Clique: 4
Isolated clique: [38]
Clique: 4
Isolated clique: [79]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [113]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [60]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [11]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [24]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [159]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: [23]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [230]
Clique: 3
Isolated clique: [235]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [234]
Clique: 3
Isolated clique: [232]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [114]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [93]
Clique: 3
Isolated clique: [231]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [171]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [109]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [7]
Clique: 3
Isolated clique: [29]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [71]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [189]
Clique: 3
Isolated clique: [140]
Clique: 3
Isolated clique: [187]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [50]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [54]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [100]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: [157]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [123]
Clique: 3
Isolated clique: [173]
Clique: 3
Isolated clique: [125]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [124]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [33]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [136]
Clique: 3
Isolated clique: [135]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: [115]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [46]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [186]
Clique: 3
Isolated clique: [185]
Clique: 3
Isolated clique: [75, 182]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [160]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [161]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [80]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [117]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [106]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [39]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [170]
Clique: 2
Isolated clique: [118]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [127]
Clique: 2
Isolated clique: [129]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [61]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [166]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [172]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [69]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [66]
Clique: 2
Isolated clique: [107]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [188]
Clique: 2
Isolated clique: [15, 19]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [87]
Clique: 2
Isolated clique: [223]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: [211]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [48]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: [57]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [5]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [92]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [91]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [220]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [221]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [193, 194]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [233]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [203]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 1381 rows and 445 columns.
Reduced LP has 46675 rows, 30972 columns, and 431587 nonzeros.
Presolve time = 0.31 sec. (126.65 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           832.000000
Perturbation started.
Iteration:   101   Dual objective     =           832.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 980 rows and 439 columns.
MIP Presolve modified 176 coefficients.
Reduced MIP has 46545 rows, 30978 columns, and 361949 nonzeros.
Reduced MIP has 26 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.14 sec. (105.95 ticks)
Probing time = 0.02 sec. (7.76 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46545 rows, 30978 columns, and 361949 nonzeros.
Reduced MIP has 26 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.25 sec. (136.83 ticks)
Probing time = 0.03 sec. (8.84 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.27 sec. (116.45 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      832.0000      832.0000      410    0.00%
Elapsed time = 0.97 sec. (558.15 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.97 sec. (560.55 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.97 sec. (560.55 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 980 rows and 439 columns.
MIP Presolve modified 32344 coefficients.
Reduced MIP has 46545 rows, 30978 columns, and 342282 nonzeros.
Reduced MIP has 30802 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.75 sec. (602.95 ticks)
Found incumbent of value 0.000000 after 1.20 sec. (920.34 ticks)
Probing time = 0.14 sec. (18.61 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46545 rows, 30978 columns, and 342282 nonzeros.
Reduced MIP has 30802 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.32 sec. (212.00 ticks)
Probing time = 0.10 sec. (17.81 ticks)
Clique table members: 15390.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.20 sec. (150.88 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      832.0000              --- 
      0     0      832.0000   124        0.0000      832.0000      345     --- 
*     0+    0                          832.0000      832.0000             0.00%
      0     0        cutoff            832.0000      832.0000     1157    0.00%
Elapsed time = 4.95 sec. (4690.51 ticks, tree = 0.01 MB, solutions = 2)
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-2000-2018 & 177 & 31152 & 88 & 120.0 & IP & 832.0 & 832.0 & 0.984301333 & 3 & 525 & 66.79490114 & - & - & - & 0 & 832.0 & 4.956911087036133 & 0.0 & 0 & 34890.78000000002 & 101.04120000000003 & 10823.340000000002
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-2000-2019.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 88
|V| = 254
|A| = 677
|V′| = 177
|A′| = 31152
###################SBRP####################
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
Getting intersection cuts
Isolated clique: [12]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [55]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [104]
Clique: 4
Isolated clique: [83]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [85]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [126]
Clique: 4
Isolated clique: [128]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [8]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [28]
Clique: 4
Isolated clique: [38]
Clique: 4
Isolated clique: [79]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [113]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [60]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [11]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [24]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [159]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: [23]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [230]
Clique: 3
Isolated clique: [235]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [234]
Clique: 3
Isolated clique: [232]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [114]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [93]
Clique: 3
Isolated clique: [231]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [171]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [109]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [7]
Clique: 3
Isolated clique: [29]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [71]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [189]
Clique: 3
Isolated clique: [140]
Clique: 3
Isolated clique: [187]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [50]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [54]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [100]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: [157]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [123]
Clique: 3
Isolated clique: [173]
Clique: 3
Isolated clique: [125]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [124]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [33]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [136]
Clique: 3
Isolated clique: [135]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: [115]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [46]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [186]
Clique: 3
Isolated clique: [185]
Clique: 3
Isolated clique: [75, 182]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [160]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [161]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [80]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [117]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [106]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [39]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [170]
Clique: 2
Isolated clique: [118]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [127]
Clique: 2
Isolated clique: [129]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [61]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [166]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [172]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [69]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [66]
Clique: 2
Isolated clique: [107]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [188]
Clique: 2
Isolated clique: [15, 19]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [87]
Clique: 2
Isolated clique: [223]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: [211]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [48]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: [57]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [5]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [92]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [91]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [220]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [221]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [193, 194]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [233]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [203]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2

Implied bound cuts applied:  2
Flow cuts applied:  3
Mixed integer rounding cuts applied:  4
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    4.95 sec. (4692.85 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    4.95 sec. (4692.85 ticks)
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 1381 rows and 445 columns.
Reduced LP has 46675 rows, 30972 columns, and 431587 nonzeros.
Presolve time = 0.31 sec. (126.65 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           832.000000
Perturbation started.
Iteration:   101   Dual objective     =           832.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 980 rows and 439 columns.
MIP Presolve modified 176 coefficients.
Reduced MIP has 46545 rows, 30978 columns, and 361949 nonzeros.
Reduced MIP has 26 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.14 sec. (105.95 ticks)
Probing time = 0.02 sec. (7.76 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46545 rows, 30978 columns, and 361949 nonzeros.
Reduced MIP has 26 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.25 sec. (136.83 ticks)
Probing time = 0.02 sec. (8.84 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.28 sec. (116.45 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      832.0000      832.0000      410    0.00%
Elapsed time = 0.98 sec. (558.15 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.98 sec. (560.55 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.98 sec. (560.55 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 980 rows and 439 columns.
MIP Presolve modified 32344 coefficients.
Reduced MIP has 46545 rows, 30978 columns, and 342282 nonzeros.
Reduced MIP has 30802 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.76 sec. (602.95 ticks)
Found incumbent of value 0.000000 after 1.21 sec. (920.34 ticks)
Probing time = 0.15 sec. (18.61 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46545 rows, 30978 columns, and 342282 nonzeros.
Reduced MIP has 30802 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.32 sec. (212.00 ticks)
Probing time = 0.10 sec. (17.81 ticks)
Clique table members: 15390.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.20 sec. (150.88 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      832.0000              --- 
      0     0      832.0000   124        0.0000      832.0000      345     --- 
*     0+    0                          832.0000      832.0000             0.00%
      0     0        cutoff            832.0000      832.0000     1157    0.00%
Elapsed time = 4.97 sec. (4690.51 ticks, tree = 0.01 MB, solutions = 2)
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-2000-2019 & 177 & 31152 & 88 & 120.0 & IP & 832.0 & 832.0 & 0.990275855 & 3 & 525 & 67.003763301 & - & - & - & 0 & 832.0 & 4.981618881225586 & 0.0 & 0 & 34890.78000000002 & 101.04120000000003 & 10823.340000000002
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-2000-2020.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 88
|V| = 254
|A| = 677
|V′| = 177
|A′| = 31152
###################SBRP####################
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
Getting intersection cuts
Isolated clique: [12]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [55]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [104]
Clique: 4
Isolated clique: [83]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [85]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [126]
Clique: 4
Isolated clique: [128]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [8]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [28]
Clique: 4
Isolated clique: [38]
Clique: 4
Isolated clique: [79]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [113]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [60]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [11]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [24]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [159]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: [23]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [230]
Clique: 3
Isolated clique: [235]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [234]
Clique: 3
Isolated clique: [232]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [114]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [93]
Clique: 3
Isolated clique: [231]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [171]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [109]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [7]
Clique: 3
Isolated clique: [29]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [71]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [189]
Clique: 3
Isolated clique: [140]
Clique: 3
Isolated clique: [187]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [50]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [54]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [100]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: [157]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [123]
Clique: 3
Isolated clique: [173]
Clique: 3
Isolated clique: [125]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [124]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [33]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [136]
Clique: 3
Isolated clique: [135]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: [115]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [46]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [186]
Clique: 3
Isolated clique: [185]
Clique: 3
Isolated clique: [75, 182]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [160]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [161]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [80]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [117]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [106]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [39]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [170]
Clique: 2
Isolated clique: [118]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [127]
Clique: 2
Isolated clique: [129]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [61]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [166]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [172]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [69]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [66]
Clique: 2
Isolated clique: [107]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [188]
Clique: 2
Isolated clique: [15, 19]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [87]
Clique: 2
Isolated clique: [223]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: [211]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [48]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: [57]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [5]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [92]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [91]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [220]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [221]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [193, 194]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [233]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [203]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation

Implied bound cuts applied:  2
Flow cuts applied:  3
Mixed integer rounding cuts applied:  4
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    4.98 sec. (4692.85 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    4.98 sec. (4692.85 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 1381 rows and 445 columns.
Reduced LP has 46675 rows, 30972 columns, and 431587 nonzeros.
Presolve time = 0.30 sec. (126.65 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           861.000000
Perturbation started.
Iteration:   101   Dual objective     =           861.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 980 rows and 439 columns.
MIP Presolve modified 176 coefficients.
Reduced MIP has 46545 rows, 30978 columns, and 361949 nonzeros.
Reduced MIP has 26 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.14 sec. (105.95 ticks)
Probing time = 0.02 sec. (7.76 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46545 rows, 30978 columns, and 361949 nonzeros.
Reduced MIP has 26 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.25 sec. (136.83 ticks)
Probing time = 0.02 sec. (8.84 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.28 sec. (116.45 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      861.0000      861.0000      410    0.00%
Elapsed time = 0.98 sec. (558.15 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.98 sec. (560.55 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.98 sec. (560.55 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 980 rows and 439 columns.
MIP Presolve modified 32344 coefficients.
Reduced MIP has 46545 rows, 30978 columns, and 342282 nonzeros.
Reduced MIP has 30802 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.75 sec. (602.95 ticks)
Found incumbent of value 0.000000 after 1.21 sec. (920.34 ticks)
Probing time = 0.16 sec. (18.61 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46545 rows, 30978 columns, and 342282 nonzeros.
Reduced MIP has 30802 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.33 sec. (212.00 ticks)
Probing time = 0.09 sec. (17.81 ticks)
Clique table members: 15390.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.20 sec. (150.88 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      861.0000              --- 
      0     0      861.0000   124        0.0000      861.0000      345     --- 
*     0+    0                          861.0000      861.0000             0.00%
      0     0        cutoff            861.0000      861.0000     1157    0.00%
Elapsed time = 4.99 sec. (4690.51 ticks, tree = 0.01 MB, solutions = 2)
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-2000-2020 & 177 & 31152 & 88 & 120.0 & IP & 861.0 & 861.0 & 0.991993774 & 3 & 525 & 67.140998515 & - & - & - & 0 & 861.0 & 4.994073867797852 & 0.0 & 0 & 37856.99 & 105.490515 & 10823.340000000002
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-2000-2021.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility

Implied bound cuts applied:  2
Flow cuts applied:  3
Mixed integer rounding cuts applied:  4
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    4.99 sec. (4692.86 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    4.99 sec. (4692.86 ticks)
Checking complete graph
|B| = 88
|V| = 254
|A| = 677
|V′| = 177
|A′| = 31152
###################SBRP####################
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
Getting intersection cuts
Isolated clique: [12]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [70]
Clique: 4
Isolated clique: [55]
Clique: 4
Isolated clique: [27]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [104]
Clique: 4
Isolated clique: [83]
Clique: 4
Isolated clique: [17]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [85]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [44]
Clique: 4
Isolated clique: [126]
Clique: 4
Isolated clique: [128]
Clique: 4
Isolated clique: [16]
Clique: 4
Isolated clique: [8]
Clique: 4
Isolated clique: [2]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [28]
Clique: 4
Isolated clique: [38]
Clique: 4
Isolated clique: [79]
Clique: 4
Isolated clique: [43]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [113]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [60]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [99]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: [59]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [11]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [24]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [159]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: [23]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [230]
Clique: 3
Isolated clique: [235]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [234]
Clique: 3
Isolated clique: [232]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [114]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [93]
Clique: 3
Isolated clique: [231]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [171]
Clique: 3
Isolated clique: [49]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [109]
Clique: 3
Isolated clique: [108]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [7]
Clique: 3
Isolated clique: [29]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [32]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [71]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [189]
Clique: 3
Isolated clique: [140]
Clique: 3
Isolated clique: [187]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [139]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [50]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [54]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [100]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: [157]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [123]
Clique: 3
Isolated clique: [173]
Clique: 3
Isolated clique: [125]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [124]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [33]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [136]
Clique: 3
Isolated clique: [135]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [89]
Clique: 3
Isolated clique: [73]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [6]
Clique: 3
Isolated clique: [115]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [46]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [95]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [122]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [40]
Clique: 3
Isolated clique: [41]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [186]
Clique: 3
Isolated clique: [185]
Clique: 3
Isolated clique: [75, 182]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [160]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [161]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [51]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [80]
Clique: 2
Isolated clique: [81]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [117]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [106]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [39]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [170]
Clique: 2
Isolated clique: [118]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [127]
Clique: 2
Isolated clique: [129]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [61]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [52]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [130]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [166]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [172]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [69]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [66]
Clique: 2
Isolated clique: [107]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [188]
Clique: 2
Isolated clique: [15, 19]
Clique: 2
Isolated clique: [20]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [87]
Clique: 2
Isolated clique: [223]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: [211]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [48]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: [57]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [5]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [92]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [4]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [91]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [220]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [221]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [193, 194]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: [21]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [233]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [203]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 1380 rows and 444 columns.
Reduced LP has 46676 rows, 30973 columns, and 434481 nonzeros.
Presolve time = 0.31 sec. (127.01 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           945.000000
Perturbation started.
Iteration:   101   Dual objective     =           945.000000
Iteration:   443   Dual objective     =           945.000000
Removing perturbation.
Getting initial relaxation with y as integer

Dual simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 979 rows and 438 columns.
MIP Presolve modified 176 coefficients.
Reduced MIP has 46546 rows, 30979 columns, and 364843 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.14 sec. (106.58 ticks)
Probing time = 0.02 sec. (7.78 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46546 rows, 30979 columns, and 364843 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.25 sec. (137.63 ticks)
Probing time = 0.03 sec. (8.86 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.28 sec. (144.94 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      945.0000      945.0000      422    0.00%
Elapsed time = 1.00 sec. (588.90 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    1.00 sec. (591.32 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    1.00 sec. (591.32 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 979 rows and 438 columns.
MIP Presolve modified 32720 coefficients.
Reduced MIP has 46546 rows, 30979 columns, and 345002 nonzeros.
Reduced MIP has 30803 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.76 sec. (607.93 ticks)
Found incumbent of value 0.000000 after 1.24 sec. (942.22 ticks)
Probing time = 0.14 sec. (18.56 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 46546 rows, 30979 columns, and 345002 nonzeros.
Reduced MIP has 30803 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.32 sec. (213.05 ticks)
Probing time = 0.10 sec. (17.80 ticks)
Clique table members: 15390.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.20 sec. (123.50 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      945.0000              --- 
      0     0      945.0000   105        0.0000      945.0000      280     --- 
*     0+    0                          945.0000      945.0000             0.00%
      0     0        cutoff            945.0000      945.0000      377    0.00%
Elapsed time = 3.46 sec. (2705.06 ticks, tree = 0.01 MB, solutions = 2)
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
[75, 183, 182]
1.7049000000000003
[42, 43, 50, 171, 49]
2.79348
[37, 38, 43, 42, 109]
2.27106
[45, 47, 53, 52]
2.70204
[66, 71, 70, 69, 74]
2.3434800000000005
[39, 45, 44, 114]
2.21262
[40, 41, 48, 47]
2.17734
[85, 86, 159]
1.1727
[126, 127, 129, 189, 128]
1.8010200000000003
[128, 189, 140, 187]
0.6112200000000001
[55, 56, 166, 58, 61, 60]
1.95612
[95, 188, 124, 173, 170]
1.46682
[72, 73, 117]
2.2812
[192, 193, 194]
0.6326999999999999
[18, 98, 100, 99, 55]
1.11774
[23, 85, 35, 32, 28, 27, 26, 24]
3.1161600000000003
[94, 118, 123, 125, 122]
1.32378
[93, 128, 187, 186, 185]
0.9496800000000001
[49, 171, 104, 103, 79]
2.7873
[6, 90, 158, 80, 115]
1.09206
[174, 175, 177]
1.5063000000000002
[18, 55, 60, 59]
1.4064
[66, 78, 77, 216, 212, 71]
2.8373400000000006
[15, 16, 20, 19]
1.7103000000000002
[95, 191, 195, 188]
0.62382
[101, 102, 135, 136]
0.7599
[2, 79, 103, 136, 135, 33]
3.4404
[50, 130, 104, 171]
2.8333800000000005
[156, 232, 233]
3.4579199999999997
[220, 234, 235, 231, 221]
1.9323000000000001
[10, 33, 135, 102, 98, 18, 12, 11]
2.51274
[54, 99, 100, 101, 136, 103, 104]
2.1550200000000004
[2, 8, 81, 105, 106, 157, 108, 46]
3.7830000000000004
[69, 70, 73, 72]
1.23876
[92, 113, 139, 186, 187, 140]
1.7013600000000002
[106, 107, 157]
1.4124599999999998
[16, 83, 21, 20]
2.0818200000000004
[42, 49, 79, 46, 108, 109]
2.86038
[123, 173, 124, 126, 125]
1.2136200000000001
[75, 182, 184, 178, 179, 76]
3.22452
[43, 44, 51, 50]
2.74872
[2, 33, 10, 89, 8]
2.94654
[57, 169, 211, 214, 63]
3.20256
[38, 172, 114]
1.7028
[17, 22, 21, 83]
1.53252
[7, 8, 89, 29]
2.91282
[17, 83, 26, 27]
1.9483200000000003
[139, 185, 186]
0.63678
[15, 19, 227, 219, 111, 110, 223, 230, 235, 234, 232, 156, 87, 86, 23, 24, 16]
17.49858
[98, 102, 101, 100]
0.8229000000000001
[221, 231, 230, 223, 236, 222]
4.19202
[4, 159, 86, 87]
2.79912
[10, 28, 29, 89]
1.9233600000000002
[37, 109, 108, 157, 107, 200, 203]
1.7161800000000003
[10, 11, 27, 28]
2.06748
[2, 46, 79]
1.10574
[1, 172, 38, 37, 203]
1.74582
[118, 170, 173, 123]
0.7911
[39, 40, 47, 45]
2.21412
[96, 133, 196]
1.1769
[54, 104, 130, 163, 166, 56]
2.59404
[93, 122, 125, 126, 128]
1.15374
[38, 114, 44, 43]
2.24178
[129, 141, 140, 189]
2.43762
[44, 45, 52, 138, 51]
2.67918
[6, 115, 7, 29, 28, 32]
3.01806
[11, 12, 17, 27]
2.2160400000000005
[59, 60, 61, 160]
2.1051
[95, 201, 202, 194, 193, 191]
1.44906
[47, 48, 121, 169, 57, 53]
6.0558
[16, 24, 26, 83]
2.0217
[124, 127, 126]
1.91976
[5, 6, 32, 35]
3.06162
[54, 56, 55, 99]
1.1368800000000001
[23, 86, 85]
0.73416
[7, 115, 80, 81, 8]
1.64934
[12, 161, 22, 17]
1.5053999999999998
[91, 94, 122, 93, 185, 139, 113]
1.65792
[121, 210, 211, 169]
3.9794400000000003
[205, 206, 209]
2.7471
[12, 18, 59, 160, 62, 82, 161]
2.51496
[41, 113, 92]
1.9868999999999999
[4, 5, 35, 85, 159]
3.0867600000000004
[40, 91, 113, 41]
1.9300800000000002
[70, 71, 212, 207]
1.4769600000000003
[220, 233, 232, 234]
1.50594
[70, 207, 208, 117, 73]
2.59842
[230, 231, 235]
1.1382
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-2000-2021 & 177 & 31152 & 88 & 120.0 & IP & 945.0 & 945.0 & 1.006016622 & 3 & 525 & 66.630690804 & - & - & - & 0 & 945.0 & 3.4642281532287598 & 0.0 & 0 & 32041.83 & 109.89171 & 13739.77
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-3000-2016.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility

Cover cuts applied:  1
Implied bound cuts applied:  2
Flow cuts applied:  5
Mixed integer rounding cuts applied:  1
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    3.46 sec. (2707.41 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    3.46 sec. (2707.41 ticks)
Checking complete graph
|B| = 114
|V| = 354
|A| = 931
|V′| = 263
|A′| = 68906
###################SBRP####################
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
Getting intersection cuts
Isolated clique: Int64[]
Clique: 4
Isolated clique: [89]
Clique: 4
Isolated clique: [88]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: [73]
Clique: 4
Isolated clique: [82]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [12]
Clique: 4
Isolated clique: [117]
Clique: 4
Isolated clique: [14]
Clique: 4
Isolated clique: [19]
Clique: 4
Isolated clique: [29]
Clique: 4
Isolated clique: [135]
Clique: 4
Isolated clique: [49]
Clique: 4
Isolated clique: [30]
Clique: 4
Isolated clique: [4]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: [20]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [57]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [133]
Clique: 4
Isolated clique: [40]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: [107]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [245]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [13]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [243]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [229]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [131]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [48]
Clique: 3
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [168]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [215]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [165]
Clique: 3
Isolated clique: [104]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [164]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [132]
Clique: 3
Isolated clique: [130]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [43]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: [197]
Clique: 3
Isolated clique: [317]
Clique: 3
Isolated clique: [319]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [320]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [241]
Clique: 3
Isolated clique: [242]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [74]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [92]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [225]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [52]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [9]
Clique: 3
Isolated clique: [8]
Clique: 3
Isolated clique: [119]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [44]
Clique: 3
Isolated clique: [51]
Clique: 3
Isolated clique: [227]
Clique: 3
Isolated clique: [111]
Clique: 3
Isolated clique: [213]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [62]
Clique: 3
Isolated clique: [112]
Clique: 3
Isolated clique: [138]
Clique: 3
Isolated clique: [137]
Clique: 3
Isolated clique: [316]
Clique: 3
Isolated clique: [315]
Clique: 3
Isolated clique: [61]
Clique: 3
Isolated clique: [256]
Clique: 3
Isolated clique: [279]
Clique: 3
Isolated clique: [208]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [78, 238]
Clique: 2
Isolated clique: [90]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [54]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [97]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [206]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [147]
Clique: 2
Isolated clique: [63]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [222]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [198]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [311, 338]
Clique: 2
Isolated clique: [262]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [228]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [125, 257]
Clique: 2
Isolated clique: [148, 139]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [1]
Clique: 2
Isolated clique: [282]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [266]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: [193]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [217]
Clique: 2
Isolated clique: [24]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [278]
Clique: 2
Isolated clique: [281]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [294]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [83]
Clique: 2
Isolated clique: [140, 149]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [55]
Clique: 2
Isolated clique: [192]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [109]
Clique: 2
Isolated clique: [84]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [128]
Clique: 2
Isolated clique: [6]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [7]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [75]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [126]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [244]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [216]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [318]
Clique: 2
Isolated clique: [286, 287]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [271]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [297]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [95]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [59]
Clique: 2
Isolated clique: [173, 280]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [141, 144]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [247]
Clique: 2
Isolated clique: [17, 21]
Clique: 2
Isolated clique: [249, 250]
Clique: 2
Isolated clique: [134]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [270]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [295]
Clique: 2
Isolated clique: [122]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [306]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [0]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [226]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [41]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 2272 rows and 943 columns.
Reduced LP has 102827 rows, 68340 columns, and 906989 nonzeros.
Presolve time = 0.86 sec. (270.59 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           163.000000
Perturbation started.
Iteration:   101   Dual objective     =           163.000000
Removing perturbation.
Getting initial relaxation with y as integer

Primal simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1823 rows and 923 columns.
MIP Presolve modified 262 coefficients.
Reduced MIP has 102669 rows, 68360 columns, and 761577 nonzeros.
Reduced MIP has 10 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.37 sec. (223.23 ticks)
Probing time = 0.04 sec. (11.64 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102669 rows, 68360 columns, and 761577 nonzeros.
Reduced MIP has 10 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.69 sec. (289.50 ticks)
Probing time = 0.05 sec. (11.60 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.74 sec. (157.73 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      163.0000      163.0000      168    0.00%
Elapsed time = 2.53 sec. (1075.34 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    2.54 sec. (1080.54 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    2.54 sec. (1080.54 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1823 rows and 923 columns.
MIP Presolve modified 94931 coefficients.
Reduced MIP has 102669 rows, 68360 columns, and 707870 nonzeros.
Reduced MIP has 68098 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 1.97 sec. (1548.34 ticks)
Found incumbent of value 0.000000 after 3.20 sec. (2255.37 ticks)
Probing time = 0.38 sec. (35.19 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102669 rows, 68360 columns, and 707870 nonzeros.
Reduced MIP has 68098 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 1.02 sec. (538.22 ticks)
Probing time = 0.27 sec. (33.02 ticks)
Clique table members: 34046.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.54 sec. (243.83 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      163.0000              --- 
      0     0      163.0000    73        0.0000      163.0000      213     --- 
*     0+    0                          163.0000      163.0000             0.00%
      0     0        cutoff            163.0000      163.0000      631    0.00%
Elapsed time = 12.35 sec. (9501.13 ticks, tree = 0.01 MB, solutions = 2)
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-3000-2016 & 263 & 68906 & 114 & 120.0 & IP & 163.0 & 163.0 & 2.564659148 & 10 & 587 & 127.750049152 & - & - & - & 0 & 163.0 & 12.372851848602295 & 0.0 & 0 & 38632.229999999996 & 76.69971 & 4166.97
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-3000-2017.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 114
|V| = 354
|A| = 931
|V′| = 263
|A′| = 68906
###################SBRP####################
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
Getting intersection cuts
Isolated clique: Int64[]
Clique: 4
Isolated clique: [89]
Clique: 4
Isolated clique: [88]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: [73]
Clique: 4
Isolated clique: [82]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [12]
Clique: 4
Isolated clique: [117]
Clique: 4
Isolated clique: [14]
Clique: 4
Isolated clique: [19]
Clique: 4
Isolated clique: [29]
Clique: 4
Isolated clique: [135]
Clique: 4
Isolated clique: [49]
Clique: 4
Isolated clique: [30]
Clique: 4
Isolated clique: [4]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: [20]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [57]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [133]
Clique: 4
Isolated clique: [40]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: [107]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [245]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [13]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [243]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [229]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [131]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [48]
Clique: 3

Implied bound cuts applied:  4
Mixed integer rounding cuts applied:  3

Root node processing (before b&c):
  Real time             =   12.35 sec. (9506.32 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =   12.35 sec. (9506.32 ticks)
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [168]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [215]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [165]
Clique: 3
Isolated clique: [104]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [164]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [132]
Clique: 3
Isolated clique: [130]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [43]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: [197]
Clique: 3
Isolated clique: [317]
Clique: 3
Isolated clique: [319]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [320]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [241]
Clique: 3
Isolated clique: [242]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [74]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [92]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [225]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [52]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [9]
Clique: 3
Isolated clique: [8]
Clique: 3
Isolated clique: [119]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [44]
Clique: 3
Isolated clique: [51]
Clique: 3
Isolated clique: [227]
Clique: 3
Isolated clique: [111]
Clique: 3
Isolated clique: [213]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [62]
Clique: 3
Isolated clique: [112]
Clique: 3
Isolated clique: [138]
Clique: 3
Isolated clique: [137]
Clique: 3
Isolated clique: [316]
Clique: 3
Isolated clique: [315]
Clique: 3
Isolated clique: [61]
Clique: 3
Isolated clique: [256]
Clique: 3
Isolated clique: [279]
Clique: 3
Isolated clique: [208]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [78, 238]
Clique: 2
Isolated clique: [90]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [54]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [97]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [206]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [147]
Clique: 2
Isolated clique: [63]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [222]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [198]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [311, 338]
Clique: 2
Isolated clique: [262]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [228]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [125, 257]
Clique: 2
Isolated clique: [148, 139]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [1]
Clique: 2
Isolated clique: [282]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [266]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: [193]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [217]
Clique: 2
Isolated clique: [24]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [278]
Clique: 2
Isolated clique: [281]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [294]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [83]
Clique: 2
Isolated clique: [140, 149]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [55]
Clique: 2
Isolated clique: [192]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [109]
Clique: 2
Isolated clique: [84]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [128]
Clique: 2
Isolated clique: [6]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [7]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [75]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [126]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [244]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [216]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [318]
Clique: 2
Isolated clique: [286, 287]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [271]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [297]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [95]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [59]
Clique: 2
Isolated clique: [173, 280]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [141, 144]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [247]
Clique: 2
Isolated clique: [17, 21]
Clique: 2
Isolated clique: [249, 250]
Clique: 2
Isolated clique: [134]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [270]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [295]
Clique: 2
Isolated clique: [122]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [306]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [0]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [226]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [41]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 2254 rows and 925 columns.
Reduced LP has 102845 rows, 68358 columns, and 933604 nonzeros.
Presolve time = 0.87 sec. (273.84 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           952.000000
Perturbation started.
Iteration:   101   Dual objective     =           952.000000
Removing perturbation.
Getting initial relaxation with y as integer

Primal simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1805 rows and 905 columns.
MIP Presolve modified 262 coefficients.
Reduced MIP has 102687 rows, 68378 columns, and 788192 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.38 sec. (229.84 ticks)
Probing time = 0.08 sec. (16.95 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102687 rows, 68378 columns, and 788192 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.70 sec. (297.51 ticks)
Probing time = 0.10 sec. (19.36 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.95 sec. (245.45 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      952.0000      952.0000      423    0.00%
Elapsed time = 2.85 sec. (1192.00 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    2.86 sec. (1197.28 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    2.86 sec. (1197.28 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1805 rows and 905 columns.
MIP Presolve modified 99917 coefficients.
Reduced MIP has 102687 rows, 68378 columns, and 732468 nonzeros.
Reduced MIP has 68116 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 2.04 sec. (1604.18 ticks)
Found incumbent of value 0.000000 after 3.30 sec. (2346.13 ticks)
Probing time = 0.30 sec. (35.11 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102687 rows, 68378 columns, and 732468 nonzeros.
Reduced MIP has 68116 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 1.03 sec. (547.99 ticks)
Probing time = 0.22 sec. (33.29 ticks)
Clique table members: 34046.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.75 sec. (357.03 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      952.0000              --- 
*     0+    0                           20.0000      952.0000              --- 
      0     0      952.0000   106       20.0000      952.0000      445     --- 
*     0+    0                          952.0000      952.0000             0.00%
      0     0        cutoff            952.0000      952.0000     1403    0.00%
Elapsed time = 14.61 sec. (11792.00 ticks, tree = 0.01 MB, solutions = 3)
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-3000-2017 & 263 & 68906 & 114 & 120.0 & IP & 952.0 & 952.0 & 2.886846755 & 10 & 587 & 128.642046655 & - & - & - & 0 & 952.0 & 14.63186001777649 & 0.0 & 0 & 29444.67 & 96.91762499999999 & 11722.360000000002
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-3000-2018.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 114
|V| = 354
|A| = 931
|V′| = 263
|A′| = 68906
###################SBRP####################
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
Getting intersection cuts

Implied bound cuts applied:  7
Flow cuts applied:  7
Mixed integer rounding cuts applied:  5
Gomory fractional cuts applied:  3

Root node processing (before b&c):
  Real time             =   14.62 sec. (11797.72 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =   14.62 sec. (11797.72 ticks)
Isolated clique: Int64[]
Clique: 4
Isolated clique: [89]
Clique: 4
Isolated clique: [88]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: [73]
Clique: 4
Isolated clique: [82]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [12]
Clique: 4
Isolated clique: [117]
Clique: 4
Isolated clique: [14]
Clique: 4
Isolated clique: [19]
Clique: 4
Isolated clique: [29]
Clique: 4
Isolated clique: [135]
Clique: 4
Isolated clique: [49]
Clique: 4
Isolated clique: [30]
Clique: 4
Isolated clique: [4]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: [20]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [57]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [133]
Clique: 4
Isolated clique: [40]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: [107]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [245]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [13]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [243]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [229]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [131]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [48]
Clique: 3
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [168]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [215]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [165]
Clique: 3
Isolated clique: [104]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [164]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [132]
Clique: 3
Isolated clique: [130]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [43]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: [197]
Clique: 3
Isolated clique: [317]
Clique: 3
Isolated clique: [319]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [320]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [241]
Clique: 3
Isolated clique: [242]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [74]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [92]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [225]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [52]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [9]
Clique: 3
Isolated clique: [8]
Clique: 3
Isolated clique: [119]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [44]
Clique: 3
Isolated clique: [51]
Clique: 3
Isolated clique: [227]
Clique: 3
Isolated clique: [111]
Clique: 3
Isolated clique: [213]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [62]
Clique: 3
Isolated clique: [112]
Clique: 3
Isolated clique: [138]
Clique: 3
Isolated clique: [137]
Clique: 3
Isolated clique: [316]
Clique: 3
Isolated clique: [315]
Clique: 3
Isolated clique: [61]
Clique: 3
Isolated clique: [256]
Clique: 3
Isolated clique: [279]
Clique: 3
Isolated clique: [208]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [78, 238]
Clique: 2
Isolated clique: [90]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [54]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [97]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [206]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [147]
Clique: 2
Isolated clique: [63]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [222]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [198]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [311, 338]
Clique: 2
Isolated clique: [262]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [228]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [125, 257]
Clique: 2
Isolated clique: [148, 139]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [1]
Clique: 2
Isolated clique: [282]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [266]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: [193]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [217]
Clique: 2
Isolated clique: [24]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [278]
Clique: 2
Isolated clique: [281]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [294]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [83]
Clique: 2
Isolated clique: [140, 149]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [55]
Clique: 2
Isolated clique: [192]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [109]
Clique: 2
Isolated clique: [84]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [128]
Clique: 2
Isolated clique: [6]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [7]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [75]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [126]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [244]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [216]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [318]
Clique: 2
Isolated clique: [286, 287]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [271]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [297]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [95]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [59]
Clique: 2
Isolated clique: [173, 280]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [141, 144]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [247]
Clique: 2
Isolated clique: [17, 21]
Clique: 2
Isolated clique: [249, 250]
Clique: 2
Isolated clique: [134]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [270]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [295]
Clique: 2
Isolated clique: [122]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [306]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [0]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [226]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [41]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 2254 rows and 925 columns.
Reduced LP has 102845 rows, 68358 columns, and 933604 nonzeros.
Presolve time = 0.87 sec. (273.84 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           952.000000
Perturbation started.
Iteration:   101   Dual objective     =           952.000000
Removing perturbation.
Getting initial relaxation with y as integer

Primal simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1805 rows and 905 columns.
MIP Presolve modified 262 coefficients.
Reduced MIP has 102687 rows, 68378 columns, and 788192 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.39 sec. (229.84 ticks)
Probing time = 0.08 sec. (16.95 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102687 rows, 68378 columns, and 788192 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.68 sec. (297.51 ticks)
Probing time = 0.10 sec. (19.36 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.86 sec. (245.45 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      952.0000      952.0000      423    0.00%
Elapsed time = 2.75 sec. (1192.00 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    2.75 sec. (1197.28 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    2.75 sec. (1197.28 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1805 rows and 905 columns.
MIP Presolve modified 99917 coefficients.
Reduced MIP has 102687 rows, 68378 columns, and 732468 nonzeros.
Reduced MIP has 68116 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 2.02 sec. (1604.18 ticks)
Found incumbent of value 0.000000 after 3.26 sec. (2346.13 ticks)
Probing time = 0.31 sec. (35.11 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102687 rows, 68378 columns, and 732468 nonzeros.
Reduced MIP has 68116 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.99 sec. (547.99 ticks)
Probing time = 0.21 sec. (33.29 ticks)
Clique table members: 34046.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.75 sec. (357.03 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      952.0000              --- 
*     0+    0                           20.0000      952.0000              --- 
      0     0      952.0000   106       20.0000      952.0000      445     --- 
*     0+    0                          952.0000      952.0000             0.00%
      0     0        cutoff            952.0000      952.0000     1403    0.00%
Elapsed time = 14.49 sec. (11792.00 ticks, tree = 0.01 MB, solutions = 3)
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-3000-2018 & 263 & 68906 & 114 & 120.0 & IP & 952.0 & 952.0 & 2.818160162 & 10 & 587 & 128.257011093 & - & - & - & 0 & 952.0 & 14.51430892944336 & 0.0 & 0 & 29444.67 & 96.91762499999999 & 11722.360000000002
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-3000-2019.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 114
|V| = 354
|A| = 931
|V′| = 263
|A′| = 68906
###################SBRP####################

Implied bound cuts applied:  7
Flow cuts applied:  7
Mixed integer rounding cuts applied:  5
Gomory fractional cuts applied:  3

Root node processing (before b&c):
  Real time             =   14.50 sec. (11797.72 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =   14.50 sec. (11797.72 ticks)
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
Getting intersection cuts
Isolated clique: Int64[]
Clique: 4
Isolated clique: [89]
Clique: 4
Isolated clique: [88]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: [73]
Clique: 4
Isolated clique: [82]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [12]
Clique: 4
Isolated clique: [117]
Clique: 4
Isolated clique: [14]
Clique: 4
Isolated clique: [19]
Clique: 4
Isolated clique: [29]
Clique: 4
Isolated clique: [135]
Clique: 4
Isolated clique: [49]
Clique: 4
Isolated clique: [30]
Clique: 4
Isolated clique: [4]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: [20]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [57]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [133]
Clique: 4
Isolated clique: [40]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: [107]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [245]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [13]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [243]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [229]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [131]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [48]
Clique: 3
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [168]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [215]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [165]
Clique: 3
Isolated clique: [104]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [164]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [132]
Clique: 3
Isolated clique: [130]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [43]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: [197]
Clique: 3
Isolated clique: [317]
Clique: 3
Isolated clique: [319]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [320]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [241]
Clique: 3
Isolated clique: [242]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [74]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [92]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [225]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [52]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [9]
Clique: 3
Isolated clique: [8]
Clique: 3
Isolated clique: [119]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [44]
Clique: 3
Isolated clique: [51]
Clique: 3
Isolated clique: [227]
Clique: 3
Isolated clique: [111]
Clique: 3
Isolated clique: [213]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [62]
Clique: 3
Isolated clique: [112]
Clique: 3
Isolated clique: [138]
Clique: 3
Isolated clique: [137]
Clique: 3
Isolated clique: [316]
Clique: 3
Isolated clique: [315]
Clique: 3
Isolated clique: [61]
Clique: 3
Isolated clique: [256]
Clique: 3
Isolated clique: [279]
Clique: 3
Isolated clique: [208]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [78, 238]
Clique: 2
Isolated clique: [90]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [54]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [97]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [206]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [147]
Clique: 2
Isolated clique: [63]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [222]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [198]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [311, 338]
Clique: 2
Isolated clique: [262]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [228]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [125, 257]
Clique: 2
Isolated clique: [148, 139]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [1]
Clique: 2
Isolated clique: [282]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [266]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: [193]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [217]
Clique: 2
Isolated clique: [24]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [278]
Clique: 2
Isolated clique: [281]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [294]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [83]
Clique: 2
Isolated clique: [140, 149]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [55]
Clique: 2
Isolated clique: [192]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [109]
Clique: 2
Isolated clique: [84]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [128]
Clique: 2
Isolated clique: [6]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [7]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [75]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [126]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [244]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [216]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [318]
Clique: 2
Isolated clique: [286, 287]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [271]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [297]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [95]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [59]
Clique: 2
Isolated clique: [173, 280]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [141, 144]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [247]
Clique: 2
Isolated clique: [17, 21]
Clique: 2
Isolated clique: [249, 250]
Clique: 2
Isolated clique: [134]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [270]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [295]
Clique: 2
Isolated clique: [122]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [306]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [0]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [226]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [41]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 2254 rows and 925 columns.
Reduced LP has 102845 rows, 68358 columns, and 933604 nonzeros.
Presolve time = 0.88 sec. (273.84 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           952.000000
Perturbation started.
Iteration:   101   Dual objective     =           952.000000
Removing perturbation.
Getting initial relaxation with y as integer

Primal simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1805 rows and 905 columns.
MIP Presolve modified 262 coefficients.
Reduced MIP has 102687 rows, 68378 columns, and 788192 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.38 sec. (229.84 ticks)
Probing time = 0.08 sec. (16.95 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102687 rows, 68378 columns, and 788192 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.67 sec. (297.51 ticks)
Probing time = 0.10 sec. (19.36 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.96 sec. (245.45 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      952.0000      952.0000      423    0.00%
Elapsed time = 2.85 sec. (1192.00 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    2.86 sec. (1197.28 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    2.86 sec. (1197.28 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1805 rows and 905 columns.
MIP Presolve modified 99917 coefficients.
Reduced MIP has 102687 rows, 68378 columns, and 732468 nonzeros.
Reduced MIP has 68116 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 2.03 sec. (1604.18 ticks)
Found incumbent of value 0.000000 after 3.26 sec. (2346.13 ticks)
Probing time = 0.31 sec. (35.11 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102687 rows, 68378 columns, and 732468 nonzeros.
Reduced MIP has 68116 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.99 sec. (547.99 ticks)
Probing time = 0.21 sec. (33.29 ticks)
Clique table members: 34046.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.74 sec. (357.03 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      952.0000              --- 
*     0+    0                           20.0000      952.0000              --- 
      0     0      952.0000   106       20.0000      952.0000      445     --- 
*     0+    0                          952.0000      952.0000             0.00%
      0     0        cutoff            952.0000      952.0000     1403    0.00%
Elapsed time = 14.52 sec. (11792.00 ticks, tree = 0.01 MB, solutions = 3)
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-3000-2019 & 263 & 68906 & 114 & 120.0 & IP & 952.0 & 952.0 & 2.884727871 & 10 & 587 & 127.959764088 & - & - & - & 0 & 952.0 & 14.543857097625732 & 0.0 & 0 & 29444.67 & 96.91762499999999 & 11722.360000000002
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-3000-2020.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility

Implied bound cuts applied:  7
Flow cuts applied:  7
Mixed integer rounding cuts applied:  5
Gomory fractional cuts applied:  3

Root node processing (before b&c):
  Real time             =   14.53 sec. (11797.72 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =   14.53 sec. (11797.72 ticks)
Checking complete graph
|B| = 114
|V| = 354
|A| = 931
|V′| = 263
|A′| = 68906
###################SBRP####################
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
Getting intersection cuts
Isolated clique: Int64[]
Clique: 4
Isolated clique: [89]
Clique: 4
Isolated clique: [88]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: [73]
Clique: 4
Isolated clique: [82]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [12]
Clique: 4
Isolated clique: [117]
Clique: 4
Isolated clique: [14]
Clique: 4
Isolated clique: [19]
Clique: 4
Isolated clique: [29]
Clique: 4
Isolated clique: [135]
Clique: 4
Isolated clique: [49]
Clique: 4
Isolated clique: [30]
Clique: 4
Isolated clique: [4]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: [20]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [57]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [133]
Clique: 4
Isolated clique: [40]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: [107]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [245]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [13]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [243]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [229]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [131]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [48]
Clique: 3
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [168]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [215]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [165]
Clique: 3
Isolated clique: [104]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [164]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [132]
Clique: 3
Isolated clique: [130]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [43]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: [197]
Clique: 3
Isolated clique: [317]
Clique: 3
Isolated clique: [319]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [320]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [241]
Clique: 3
Isolated clique: [242]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [74]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [92]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [225]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [52]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [9]
Clique: 3
Isolated clique: [8]
Clique: 3
Isolated clique: [119]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [44]
Clique: 3
Isolated clique: [51]
Clique: 3
Isolated clique: [227]
Clique: 3
Isolated clique: [111]
Clique: 3
Isolated clique: [213]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [62]
Clique: 3
Isolated clique: [112]
Clique: 3
Isolated clique: [138]
Clique: 3
Isolated clique: [137]
Clique: 3
Isolated clique: [316]
Clique: 3
Isolated clique: [315]
Clique: 3
Isolated clique: [61]
Clique: 3
Isolated clique: [256]
Clique: 3
Isolated clique: [279]
Clique: 3
Isolated clique: [208]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [78, 238]
Clique: 2
Isolated clique: [90]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [54]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [97]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [206]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [147]
Clique: 2
Isolated clique: [63]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [222]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [198]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [311, 338]
Clique: 2
Isolated clique: [262]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [228]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [125, 257]
Clique: 2
Isolated clique: [148, 139]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [1]
Clique: 2
Isolated clique: [282]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [266]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: [193]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [217]
Clique: 2
Isolated clique: [24]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [278]
Clique: 2
Isolated clique: [281]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [294]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [83]
Clique: 2
Isolated clique: [140, 149]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [55]
Clique: 2
Isolated clique: [192]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [109]
Clique: 2
Isolated clique: [84]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [128]
Clique: 2
Isolated clique: [6]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [7]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [75]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [126]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [244]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [216]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [318]
Clique: 2
Isolated clique: [286, 287]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [271]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [297]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [95]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [59]
Clique: 2
Isolated clique: [173, 280]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [141, 144]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [247]
Clique: 2
Isolated clique: [17, 21]
Clique: 2
Isolated clique: [249, 250]
Clique: 2
Isolated clique: [134]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [270]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [295]
Clique: 2
Isolated clique: [122]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [306]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [0]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [226]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [41]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 2254 rows and 925 columns.
Reduced LP has 102845 rows, 68358 columns, and 933604 nonzeros.
Presolve time = 0.88 sec. (273.84 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =           988.000000
Perturbation started.
Iteration:   101   Dual objective     =           988.000000
Removing perturbation.
Getting initial relaxation with y as integer

Primal simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1805 rows and 905 columns.
MIP Presolve modified 262 coefficients.
Reduced MIP has 102687 rows, 68378 columns, and 788192 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.37 sec. (229.84 ticks)
Probing time = 0.08 sec. (16.95 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102687 rows, 68378 columns, and 788192 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.68 sec. (297.51 ticks)
Probing time = 0.10 sec. (19.36 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.92 sec. (245.45 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0      988.0000      988.0000      423    0.00%
Elapsed time = 2.79 sec. (1192.00 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    2.80 sec. (1197.28 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    2.80 sec. (1197.28 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1805 rows and 905 columns.
MIP Presolve modified 99917 coefficients.
Reduced MIP has 102687 rows, 68378 columns, and 732468 nonzeros.
Reduced MIP has 68116 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 2.03 sec. (1604.18 ticks)
Found incumbent of value 0.000000 after 3.26 sec. (2346.13 ticks)
Probing time = 0.30 sec. (35.11 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102687 rows, 68378 columns, and 732468 nonzeros.
Reduced MIP has 68116 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.99 sec. (547.99 ticks)
Probing time = 0.21 sec. (33.29 ticks)
Clique table members: 34046.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.75 sec. (357.03 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      988.0000              --- 
*     0+    0                           25.0000      988.0000              --- 
      0     0      988.0000   106       25.0000      988.0000      445     --- 
*     0+    0                          988.0000      988.0000             0.00%
      0     0        cutoff            988.0000      988.0000     1403    0.00%
Elapsed time = 14.49 sec. (11792.00 ticks, tree = 0.01 MB, solutions = 3)
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-3000-2020 & 263 & 68906 & 114 & 120.0 & IP & 988.0 & 988.0 & 2.826506283 & 10 & 587 & 127.84687887 & - & - & - & 0 & 988.0 & 14.51035189628601 & 0.0 & 0 & 29444.67 & 96.91762499999999 & 11722.360000000002
########################################################
Application parameters:
  intersection-cuts  =>  true
  batch  =>  nothing
  subcycle-separation  =>  false
  instance  =>  "data/carlos/notified-alto-santo/notified-alto-santo-3000-2021.txt"
  ip  =>  true
  arcs-mtz  =>  false
  brkga  =>  false
  dd  =>  false
  unitary-profits  =>  false
  out  =>  nothing
  instance-type  =>  "carlos"
  warm-start-solution  =>  nothing
  y-integer  =>  false
  vehicle-time-limit  =>  "120"
  nosolve  =>  false
  lb  =>  nothing
  brkga-conf  =>  "conf/config.conf"
Reading nodes
Reading arcs
Checking feasibility
Checking complete graph
|B| = 114
|V| = 354
|A| = 931
|V′| = 263
|A′| = 68906
###################SBRP####################
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
Getting intersection cuts

Implied bound cuts applied:  7
Flow cuts applied:  7
Mixed integer rounding cuts applied:  5
Gomory fractional cuts applied:  3

Root node processing (before b&c):
  Real time             =   14.49 sec. (11797.72 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =   14.49 sec. (11797.72 ticks)
Isolated clique: Int64[]
Clique: 4
Isolated clique: [89]
Clique: 4
Isolated clique: [88]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [18]
Clique: 4
Isolated clique: [73]
Clique: 4
Isolated clique: [82]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: [45]
Clique: 4
Isolated clique: [12]
Clique: 4
Isolated clique: [117]
Clique: 4
Isolated clique: [14]
Clique: 4
Isolated clique: [19]
Clique: 4
Isolated clique: [29]
Clique: 4
Isolated clique: [135]
Clique: 4
Isolated clique: [49]
Clique: 4
Isolated clique: [30]
Clique: 4
Isolated clique: [4]
Clique: 4
Isolated clique: [46]
Clique: 4
Isolated clique: [20]
Clique: 4
Isolated clique: [10]
Clique: 4
Isolated clique: [57]
Clique: 4
Isolated clique: [47]
Clique: 4
Isolated clique: [133]
Clique: 4
Isolated clique: [40]
Clique: 4
Isolated clique: [86]
Clique: 4
Isolated clique: [107]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 4
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [25]
Clique: 3
Isolated clique: [26]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [245]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [13]
Clique: 3
Isolated clique: [169]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [243]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [229]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [131]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [98]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [96]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [48]
Clique: 3
Isolated clique: [129]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [168]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [215]
Clique: 3
Isolated clique: [106]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [56]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [37]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [118]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [165]
Clique: 3
Isolated clique: [104]
Clique: 3
Isolated clique: [105]
Clique: 3
Isolated clique: [164]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [132]
Clique: 3
Isolated clique: [130]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [43]
Clique: 3
Isolated clique: [103]
Clique: 3
Isolated clique: [101]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [102]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [58]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [42]
Clique: 3
Isolated clique: [28]
Clique: 3
Isolated clique: [197]
Clique: 3
Isolated clique: [317]
Clique: 3
Isolated clique: [319]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [320]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [241]
Clique: 3
Isolated clique: [242]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [74]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [39]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [35]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [92]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [225]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [52]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [34]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [9]
Clique: 3
Isolated clique: [8]
Clique: 3
Isolated clique: [119]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [31]
Clique: 3
Isolated clique: [44]
Clique: 3
Isolated clique: [51]
Clique: 3
Isolated clique: [227]
Clique: 3
Isolated clique: [111]
Clique: 3
Isolated clique: [213]
Clique: 3
Isolated clique: [76]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [62]
Clique: 3
Isolated clique: [112]
Clique: 3
Isolated clique: [138]
Clique: 3
Isolated clique: [137]
Clique: 3
Isolated clique: [316]
Clique: 3
Isolated clique: [315]
Clique: 3
Isolated clique: [61]
Clique: 3
Isolated clique: [256]
Clique: 3
Isolated clique: [279]
Clique: 3
Isolated clique: [208]
Clique: 3
Isolated clique: Int64[]
Clique: 3
Isolated clique: [78, 238]
Clique: 2
Isolated clique: [90]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [53]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [54]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [156]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [97]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [94]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [206]
Clique: 2
Isolated clique: [207]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [147]
Clique: 2
Isolated clique: [63]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [222]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [198]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [311, 338]
Clique: 2
Isolated clique: [262]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [228]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [125, 257]
Clique: 2
Isolated clique: [148, 139]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [1]
Clique: 2
Isolated clique: [282]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [191]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [266]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [121]
Clique: 2
Isolated clique: [193]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [217]
Clique: 2
Isolated clique: [24]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [278]
Clique: 2
Isolated clique: [281]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [294]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [83]
Clique: 2
Isolated clique: [140, 149]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [55]
Clique: 2
Isolated clique: [192]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [109]
Clique: 2
Isolated clique: [84]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [128]
Clique: 2
Isolated clique: [6]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [7]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [75]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [23]
Clique: 2
Isolated clique: [22]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [126]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [110]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [244]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [216]
Clique: 2
Isolated clique: [50]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [212]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [318]
Clique: 2
Isolated clique: [286, 287]
Clique: 2
Isolated clique: [72]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [271]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [297]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [95]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [59]
Clique: 2
Isolated clique: [173, 280]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [136]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [141, 144]
Clique: 2
Isolated clique: [68]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [247]
Clique: 2
Isolated clique: [17, 21]
Clique: 2
Isolated clique: [249, 250]
Clique: 2
Isolated clique: [134]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [270]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [295]
Clique: 2
Isolated clique: [122]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [306]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [0]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [226]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Isolated clique: [41]
Clique: 2
Isolated clique: Int64[]
Clique: 2
Getting initial relaxation
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Parallel mode: deterministic, using up to 8 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 6 threads...
 * Starting primal Simplex on 1 thread...
Tried aggregator 1 time.
LP Presolve eliminated 2254 rows and 925 columns.
Reduced LP has 102845 rows, 68358 columns, and 933604 nonzeros.
Presolve time = 0.87 sec. (273.84 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =          1095.000000
Perturbation started.
Iteration:   101   Dual objective     =          1095.000000
Removing perturbation.
Getting initial relaxation with y as integer

Primal simplex solved model.

Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1805 rows and 905 columns.
MIP Presolve modified 262 coefficients.
Reduced MIP has 102687 rows, 68378 columns, and 788192 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.39 sec. (229.84 ticks)
Probing time = 0.08 sec. (16.95 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102687 rows, 68378 columns, and 788192 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.69 sec. (297.51 ticks)
Probing time = 0.10 sec. (19.36 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.86 sec. (245.45 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0     0      integral     0     1095.0000     1095.0000      423    0.00%
Elapsed time = 2.77 sec. (1192.00 ticks, tree = 0.00 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    2.77 sec. (1197.28 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    2.77 sec. (1197.28 ticks)
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_TimeLimit                               3600
Tried aggregator 1 time.
MIP Presolve eliminated 1805 rows and 905 columns.
MIP Presolve modified 99917 coefficients.
Reduced MIP has 102687 rows, 68378 columns, and 732468 nonzeros.
Reduced MIP has 68116 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 2.04 sec. (1604.18 ticks)
Found incumbent of value 0.000000 after 3.26 sec. (2346.13 ticks)
Probing time = 0.30 sec. (35.11 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 102687 rows, 68378 columns, and 732468 nonzeros.
Reduced MIP has 68116 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 1.01 sec. (547.99 ticks)
Probing time = 0.22 sec. (33.29 ticks)
Clique table members: 34046.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.72 sec. (357.03 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000     1095.0000              --- 
*     0+    0                           25.0000     1095.0000              --- 
      0     0     1095.0000   106       25.0000     1095.0000      445     --- 
*     0+    0                         1095.0000     1095.0000             0.00%
      0     0        cutoff           1095.0000     1095.0000     1403    0.00%
Elapsed time = 14.54 sec. (11792.00 ticks, tree = 0.01 MB, solutions = 3)
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
[78, 239, 238]
1.7049000000000003
[136, 170, 169, 245]
2.43762
[19, 86, 28, 29]
1.9483200000000003
[135, 245, 169, 243]
0.6112200000000001
[25, 88, 37, 34, 30, 29, 28, 26]
3.1161600000000003
[193, 197, 207, 196]
2.2362
[13, 14, 19, 29]
2.2160400000000005
[17, 18, 22, 21]
1.7103000000000002
[88, 89, 215]
1.1727
[6, 7, 37, 88, 215]
3.0867600000000004
[52, 156, 107, 227]
2.8333800000000005
[46, 47, 54, 167, 53]
2.67918
[311, 349, 343, 344, 345, 346, 347, 331, 332, 333, 334, 335, 340, 339, 338]
55.97538000000001
[1, 150, 147, 138, 137]
1.7583600000000001
[8, 119, 9, 31, 30, 34]
3.01806
[75, 76, 121]
2.2812
[191, 192, 208]
2.28894
[126, 255, 306, 256]
2.4504
[194, 195, 202, 203, 300]
1.7902200000000001
[294, 318, 317, 319]
1.50594
[39, 112, 111, 213, 110, 259, 262]
1.7161800000000003
[44, 51, 82, 48, 111, 112]
2.86038
[286, 287, 305, 304]
3.2206200000000003
[138, 147, 148, 139]
0.7953600000000001
[104, 105, 164, 165]
0.7599
[168, 241, 242]
0.63678
[12, 13, 29, 30]
2.06748
[59, 225, 270, 273, 65]
3.20256
[311, 338, 341, 314, 324, 325, 329, 328]
27.794159999999998
[315, 316, 320]
1.1382
[49, 50, 128, 225, 59, 55]
6.0558
[42, 43, 50, 49]
2.17734
[45, 46, 53, 52]
2.74872
[9, 119, 83, 84, 10]
1.64934
[8, 93, 214, 83, 119]
1.09206
[19, 24, 23, 86]
1.53252
[99, 162, 252]
1.1769
[125, 257, 190, 330, 140, 149]
1.9691400000000001
[130, 229, 131, 133, 132]
1.2136200000000001
[182, 185, 184, 186, 183]
4.8989400000000005
[41, 47, 46, 118]
2.21262
[173, 280, 287, 286, 285]
7.9632000000000005
[96, 129, 132, 133, 135]
1.15374
[68, 81, 80, 275, 271, 74]
2.8373400000000006
[6, 215, 89, 90]
2.79912
[109, 110, 213]
1.4124599999999998
[4, 10, 84, 108, 109, 213, 111, 48]
3.7830000000000004
[39, 40, 45, 44, 112]
2.27106
[4, 35, 12, 92, 10]
2.94654
[14, 20, 61, 216, 64, 85, 217]
2.51496
[68, 74, 73, 72, 77]
2.3434800000000005
[18, 86, 23, 22]
2.0818200000000004
[57, 58, 222, 60, 63, 62]
1.95612
[98, 247, 251, 244]
0.62382
[139, 148, 149, 140]
0.7665000000000001
[40, 228, 118]
1.7028
[9, 10, 92, 31]
2.91282
[141, 144, 143]
2.1078
[7, 8, 34, 37]
3.06162
[248, 249, 250]
0.6326999999999999
[42, 94, 117, 43]
1.9300800000000002
[197, 206, 205, 204, 207]
2.70108
[98, 260, 261, 250, 249, 247]
1.44906
[97, 122, 130, 132, 129]
1.32378
[212, 317, 318]
3.4579199999999997
[73, 266, 267, 121, 76]
2.59842
[278, 282, 279]
1.3230000000000002
[264, 265, 268]
2.7471
[4, 48, 82]
1.10574
[73, 74, 271, 266]
1.4769600000000003
[47, 49, 55, 54]
2.70204
[14, 217, 24, 19]
1.5053999999999998
[131, 134, 133]
1.91976
[51, 227, 107, 106, 82]
2.7873
[94, 97, 129, 96, 241, 168, 117]
1.65792
[12, 35, 164, 105, 101, 20, 14, 13]
2.51274
[128, 269, 270, 225]
3.9794400000000003
[12, 30, 31, 92]
1.9233600000000002
[56, 107, 156, 219, 222, 58]
2.59404
[191, 208, 198, 200, 206, 197, 193]
9.234840000000002
[56, 58, 57, 102]
1.1368800000000001
[0, 1, 137, 158, 116, 126, 256]
6.429
[137, 138, 144, 141]
2.1901200000000003
[20, 101, 103, 102, 57]
1.11774
[279, 282, 281]
0.6927000000000001
[40, 118, 46, 45]
2.24178
[294, 319, 320, 316, 295]
1.9323000000000001
[295, 316, 315, 297, 321, 296]
4.19202
[96, 135, 243, 242, 241]
0.9496800000000001
[56, 102, 103, 104, 165, 106, 107]
2.1550200000000004
[44, 45, 52, 227, 51]
2.79348
[0, 256, 306, 307]
1.4874600000000002
[125, 288, 257]
0.6663600000000001
[230, 231, 233]
1.5063000000000002
[20, 57, 62, 61]
1.4064
[25, 89, 88]
0.73416
[122, 226, 229, 130]
0.7911
[133, 134, 136, 245, 135]
1.8010200000000003
[61, 62, 63, 216]
2.1051
[290, 292, 291]
6.8166600000000015
[70, 278, 279, 281, 280, 173]
5.309340000000001
[4, 82, 106, 165, 164, 35]
3.4404
[192, 198, 208]
2.79132
[43, 117, 95]
1.9868999999999999
[98, 244, 131, 229, 226]
1.46682
[78, 238, 240, 234, 235, 79]
3.22452
[101, 105, 104, 103]
0.8229000000000001
[18, 26, 28, 86]
2.0217
[41, 42, 49, 47]
2.21412
[72, 73, 76, 75]
1.23876
[17, 21, 303, 293, 114, 113, 297, 315, 320, 319, 317, 212, 90, 89, 25, 26, 18]
17.49858
[3, 228, 40, 39, 262]
1.74582
[209, 210, 211]
2.35446
[95, 117, 168, 242, 243, 169]
1.7013600000000002
 & :instance & :|V| & :|A| & :|B| & :T & :model & :initialLP & :yLP & :yLPTime & :intersectionCuts1 & :intersectionCuts2 & :intersectionCutsTime & :maxFlowLP & :maxFlowCuts & :maxFlowCutsTime & :lazyCuts & :cost & :solverTime & :relativeGAP & :nodeCount & :meters & :tourMinutes & :blocksMeters
 & notified-alto-santo-3000-2021 & 263 & 68906 & 114 & 120.0 & IP & 1095.0 & 1095.0 & 2.795784323 & 10 & 587 & 128.033254756 & - & - & - & 0 & 1095.0 & 14.562931060791016 & 0.0 & 0 & 29444.67 & 96.91762499999999 & 11722.360000000002
########################################################

Implied bound cuts applied:  7
Flow cuts applied:  7
Mixed integer rounding cuts applied:  5
Gomory fractional cuts applied:  3

Root node processing (before b&c):
  Real time             =   14.54 sec. (11797.72 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =   14.54 sec. (11797.72 ticks)
